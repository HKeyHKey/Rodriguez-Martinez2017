args <- commandArgs(TRUE)
region=args[1]
stage=args[2]
ChIP=c(args[3],args[4])

if (length(grep('PolII',ChIP)) > 0) ChIP_name='Pol II'
if (length(grep('H3K4ME3',ChIP)) > 0) ChIP_name='H3K4ME3'
if (length(grep('H3K27AC',ChIP)) > 0) ChIP_name='H3K27AC'
if (length(grep('HTZ1',ChIP)) > 0) ChIP_name='HTZ1'
if (length(grep('H3K4ME1',ChIP)) > 0) ChIP_name='H3K4ME1'
if (length(grep('Mononucleosomes',ChIP)) > 0) ChIP_name='Mononucleosomes'

real_replicates=c()
random_replicates=list()
for (ChIP_replicate in ChIP[ChIP!=''])
{
if (stage=='2-40_cells')
real=read.table(paste('Stats_',region,'_middle_maximum_probes_coordinates_Ce10_oris.ech2.40a.40b.40c.3rep.txt_on_',ChIP_replicate,'.dat',sep=''),header=F)
if (stage=='Mix_only')
real=read.table(paste('Stats_',region,'_middle_maximum_probes_coordinates_Ce10_oris.Mix_only.txt_on_',ChIP_replicate,'.dat',sep=''),header=F)

random_mean=c()
#random_se=c()
for (set in 1:100)
{
random=read.table(paste('Stats_',region,'_middle_maximum_probes_coordinates_Random_set_of_boxes_',stage,'_',set,'.txt_on_',ChIP_replicate,'.dat',sep=''),header=F)
random_mean=rbind(random_mean,random$V2)
#random_se=rbind(random_se,random$V4)
}

real_replicates=cbind(real_replicates,real$V2)
random_replicates=c(random_replicates,list(random_mean))
}

averaged_real=apply(real_replicates,1,mean)
averaged_random=c()
for (set in 1:100)
{
for_averaging=c()
for (replicate in 1:length(random_replicates))
{
for_averaging=cbind(for_averaging,random_replicates[[replicate]][set,])
}
averaged_random=cbind(averaged_random,apply(for_averaging,1,mean))
}

x=real$V1
xrange=c(0,max(x)+0.01*max(x))
yrange=c(min(averaged_random,averaged_real)-0.01*abs(min(averaged_random,averaged_real)),max(averaged_random,averaged_real)+0.01*abs(max(averaged_random,averaged_real)))
title=paste(region,' origins vs.\n',ChIP_name,' in ',stage,sep='')
file_name=paste(region,'_origins_vs_',gsub(' ','_',ChIP_name),'_in_',stage,sep='')
pdf(paste(file_name,'.pdf',sep=''),width=8,height=6)
for (set in 1:100)
{
plot(x,averaged_random[,set],ty='l',xlim=xrange,ylim=yrange,axes=F,xlab='',ylab='',col='grey',lwd=2)
par(new=T)
}
plot(x,averaged_real,ty='l',col='red',xlim=xrange,ylim=yrange,lwd=2,xlab='Distance to origin peak (bp)',ylab='ChIP signal',main=title,axes=F)
axis(1)
axis(2)
dev.off()
